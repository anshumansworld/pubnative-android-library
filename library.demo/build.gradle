//==================================================================================================
// PROJECT
//==================================================================================================
version=project.version?:"BETA"
group=project.group?:"net.pubnative"
buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0'
        // FABRIC
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
task projectInfo << {
    println ""
    println " === ${project.group}:${project.name}:${version} - (${System.getenv("CIRCLE_BUILD_NUM")}) ==="
    println ""
}
//==================================================================================================
// ANDROID
//==================================================================================================
apply plugin: 'com.android.application'
android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "net.pubnative.library.demo"
        minSdkVersion 10
        targetSdkVersion 10
        versionCode System.getenv("CIRCLE_BUILD_NUM")?System.getenv("CIRCLE_BUILD_NUM").toInteger():1
        versionName project.version?:"BETA"
    }
    buildTypes {
        debug {
            ext.betaDistributionGroupAliases="developers"
        }
        release {
            ext.betaDistributionGroupAliases="developers"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests {
            returnDefaultValues = true
        }
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':library')
    compile project(':library.interstitial')
    compile project(':library.banner')
    compile project(':library.feed.banner')
    compile 'com.squareup.picasso:picasso:2.5.2'
}
//==================================================================================================
// FABRIC
//==================================================================================================
if (System.getenv("CIRCLECI")) {
    apply plugin: 'io.fabric'
    println ""
    println "======== FABRIC ========"
    try {
        File file = new File("${project.projectDir.absolutePath}/fabric.properties")
        if (!file.canRead()) {
            file.createNewFile()
            file << "apiKey=${System.getenv("FABRIC_API_KEY")}\n"
            file << "apiSecret=${System.getenv("FABRIC_API_SECRET")}\n"
        }
        println " - Success"
        println "========================"
        println ""
    } catch (IOException ioException) {
        println " - Error: "
        println " ${ioException.toString()}"
        println "========================"
        println ""
    }
}
